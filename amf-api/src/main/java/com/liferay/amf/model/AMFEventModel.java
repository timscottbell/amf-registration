/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.amf.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the AMFEvent service. Represents a row in the &quot;AMF_AMFEvent&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.amf.model.impl.AMFEventModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.amf.model.impl.AMFEventImpl}.
 * </p>
 *
 * @author Timothy Bell
 * @see AMFEvent
 * @see com.liferay.amf.model.impl.AMFEventImpl
 * @see com.liferay.amf.model.impl.AMFEventModelImpl
 * @generated
 */
@ProviderType
public interface AMFEventModel extends BaseModel<AMFEvent> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a amf event model instance should use the {@link AMFEvent} interface instead.
	 */

	/**
	 * Returns the primary key of this amf event.
	 *
	 * @return the primary key of this amf event
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this amf event.
	 *
	 * @param primaryKey the primary key of this amf event
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the amf event ID of this amf event.
	 *
	 * @return the amf event ID of this amf event
	 */
	public long getAmfEventId();

	/**
	 * Sets the amf event ID of this amf event.
	 *
	 * @param amfEventId the amf event ID of this amf event
	 */
	public void setAmfEventId(long amfEventId);

	/**
	 * Returns the user ID of this amf event.
	 *
	 * @return the user ID of this amf event
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this amf event.
	 *
	 * @param userId the user ID of this amf event
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this amf event.
	 *
	 * @return the user uuid of this amf event
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this amf event.
	 *
	 * @param userUuid the user uuid of this amf event
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this amf event.
	 *
	 * @return the user name of this amf event
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this amf event.
	 *
	 * @param userName the user name of this amf event
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create time of this amf event.
	 *
	 * @return the create time of this amf event
	 */
	public long getCreateTime();

	/**
	 * Sets the create time of this amf event.
	 *
	 * @param createTime the create time of this amf event
	 */
	public void setCreateTime(long createTime);

	/**
	 * Returns the type of this amf event.
	 *
	 * @return the type of this amf event
	 */
	public int getType();

	/**
	 * Sets the type of this amf event.
	 *
	 * @param type the type of this amf event
	 */
	public void setType(int type);

	/**
	 * Returns the ip address of this amf event.
	 *
	 * @return the ip address of this amf event
	 */
	@AutoEscape
	public String getIpAddress();

	/**
	 * Sets the ip address of this amf event.
	 *
	 * @param ipAddress the ip address of this amf event
	 */
	public void setIpAddress(String ipAddress);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(AMFEvent amfEvent);

	@Override
	public int hashCode();

	@Override
	public CacheModel<AMFEvent> toCacheModel();

	@Override
	public AMFEvent toEscapedModel();

	@Override
	public AMFEvent toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}